<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oswizar.springbootsample.mapper.BookMapper">

<!--method1-->
    <resultMap id="bookResultMap" type="com.oswizar.springbootsample.entity.Book">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="authorId" column="author_id"/>
        <!--关联属性-->
        <association property="author" javaType="com.oswizar.springbootsample.entity.Author">
            <!--注：此处column应为book中外键列名-->
            <id property="id" column="author_id" />
            <!--注：避免属性重名，否则属性值注入错误-->
            <result property="name" column="authorName" />
            <result property="age" column="authorAge" />
        </association>
    </resultMap>


    <!--嵌套查询，结果映射只能使用resultMap-->
    <select id="findBookById" parameterType="int" resultMap="bookResultMap">
        SELECT
            b.*,
            a.name AS 'authorName',
            a.age  AS 'authorAge'
        FROM t_book b, t_author a
        WHERE b.author_id = a.id
        AND b.id = #{id}
    </select>



<!--method2-->
<!--        <resultMap id="authorResultMap" type="Author">-->
<!--            <id property="id" column="authorId"/>-->
<!--            <result property="name" column="authorName"/>-->
<!--            <result property="age" column="authorAge"/>-->
<!--        </resultMap>-->

<!--        <resultMap id="bookResultMap" type="Book">-->
<!--            <id property="id" column="id"/>-->
<!--            <result property="name" column="name"/>-->
<!--            <result property="price" column="price"/>-->
<!--            <result property="authorId" column="author_id"/>-->
<!--            &lt;!&ndash;引用author的resultMap&ndash;&gt;-->
<!--            <association property="author" resultMap="authorResultMap" />-->
<!--        </resultMap>-->


<!--        &lt;!&ndash;注意这里a.id的别名和authorResultMap中相对应&ndash;&gt;-->
<!--        <select id="findBookById" parameterType="int" resultMap="bookResultMap">-->
<!--            SELECT-->
<!--                b.*,-->
<!--                a.id   AS 'authorId',-->
<!--                a.name AS 'authorName',-->
<!--                a.age  AS 'authorAge'-->
<!--            FROM t_book b, t_author a-->
<!--            WHERE b.author_id = a.id-->
<!--            AND b.id = #{id}-->
<!--        </select>-->




<!--method3-->
<!--    <resultMap id="bookResultMap" type="Book">-->
<!--        <id property="id" column="id"/>-->
<!--        <result property="name" column="name"/>-->
<!--        <result property="price" column="price"/>-->
<!--        <result property="authorId" column="author_id"/>-->
<!--        &lt;!&ndash;使用select属性进行查询关联&ndash;&gt;-->
<!--        <association property="author" column="author_id" javaType="Author"-->
<!--                     select="AuthorMapper.findById"/>-->
<!--    </resultMap>-->
<!--    &lt;!&ndash;简化了book的查询语句，不再需要与其他表关联&ndash;&gt;-->
<!--    <select id="findBookById" parameterType="int" resultMap="bookResultMap">-->
<!--        SELECT b.*-->
<!--        FROM t_book b-->
<!--        WHERE b.id = #{id}-->
<!--    </select>-->






    <!--新增了book表的查询语句，将会被调用获取结果并组装给author-->
    <select id="findBookByAuthorId" parameterType="int" resultType="com.oswizar.springbootsample.entity.Book">
        SELECT b.*
        FROM t_book b
        WHERE b.author_id = #{id}
    </select>


</mapper>
